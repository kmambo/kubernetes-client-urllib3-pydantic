# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v1_network_policy_peer import V1NetworkPolicyPeer

class TestV1NetworkPolicyPeer(unittest.TestCase):
    """V1NetworkPolicyPeer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1NetworkPolicyPeer:
        """Test V1NetworkPolicyPeer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1NetworkPolicyPeer`
        """
        model = V1NetworkPolicyPeer()
        if include_optional:
            return V1NetworkPolicyPeer(
                ip_block = kubernetes.models.v1/ip_block.v1.IPBlock(
                    cidr = '', 
                    except = [
                        ''
                        ], ),
                namespace_selector = kubernetes.models.v1/label_selector.v1.LabelSelector(
                    match_expressions = [
                        null
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                pod_selector = kubernetes.models.v1/label_selector.v1.LabelSelector(
                    match_expressions = [
                        null
                        ], 
                    match_labels = {
                        'key' : ''
                        }, )
            )
        else:
            return V1NetworkPolicyPeer(
        )
        """

    def testV1NetworkPolicyPeer(self):
        """Test V1NetworkPolicyPeer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
