# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v2_metric_spec import V2MetricSpec

class TestV2MetricSpec(unittest.TestCase):
    """V2MetricSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2MetricSpec:
        """Test V2MetricSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2MetricSpec`
        """
        model = V2MetricSpec()
        if include_optional:
            return V2MetricSpec(
                container_resource = kubernetes.models.v2/container_resource_metric_source.v2.ContainerResourceMetricSource(
                    container = '', 
                    name = '', 
                    target = null, ),
                external = kubernetes.models.v2/external_metric_source.v2.ExternalMetricSource(
                    metric = null, 
                    target = null, ),
                object = kubernetes.models.v2/object_metric_source.v2.ObjectMetricSource(
                    described_object = null, 
                    metric = null, 
                    target = null, ),
                pods = kubernetes.models.v2/pods_metric_source.v2.PodsMetricSource(
                    metric = null, 
                    target = null, ),
                resource = kubernetes.models.v2/resource_metric_source.v2.ResourceMetricSource(
                    name = '', 
                    target = null, ),
                type = ''
            )
        else:
            return V2MetricSpec(
                type = '',
        )
        """

    def testV2MetricSpec(self):
        """Test V2MetricSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
