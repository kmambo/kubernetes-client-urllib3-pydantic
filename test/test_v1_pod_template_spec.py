# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v1_pod_template_spec import V1PodTemplateSpec

class TestV1PodTemplateSpec(unittest.TestCase):
    """V1PodTemplateSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1PodTemplateSpec:
        """Test V1PodTemplateSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1PodTemplateSpec`
        """
        model = V1PodTemplateSpec()
        if include_optional:
            return V1PodTemplateSpec(
                metadata = kubernetes.models.v1/object_meta.v1.ObjectMeta(
                    annotations = {
                        'key' : ''
                        }, 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        ''
                        ], 
                    generate_name = '', 
                    generation = 56, 
                    labels = {
                        'key' : ''
                        }, 
                    managed_fields = [
                        null
                        ], 
                    name = '', 
                    namespace = '', 
                    owner_references = [
                        null
                        ], 
                    resource_version = '', 
                    self_link = '', 
                    uid = '', ),
                spec = kubernetes.models.v1/pod_spec.v1.PodSpec(
                    active_deadline_seconds = 56, 
                    affinity = null, 
                    automount_service_account_token = True, 
                    containers = [
                        null
                        ], 
                    dns_config = null, 
                    dns_policy = '', 
                    enable_service_links = True, 
                    ephemeral_containers = [
                        null
                        ], 
                    host_aliases = [
                        null
                        ], 
                    host_ipc = True, 
                    host_network = True, 
                    host_pid = True, 
                    host_users = True, 
                    hostname = '', 
                    image_pull_secrets = [
                        null
                        ], 
                    init_containers = [
                        null
                        ], 
                    node_name = '', 
                    node_selector = {
                        'key' : ''
                        }, 
                    os = null, 
                    overhead = {
                        'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                        }, 
                    preemption_policy = '', 
                    priority = 56, 
                    priority_class_name = '', 
                    readiness_gates = [
                        null
                        ], 
                    resource_claims = [
                        null
                        ], 
                    resources = null, 
                    restart_policy = '', 
                    runtime_class_name = '', 
                    scheduler_name = '', 
                    scheduling_gates = [
                        null
                        ], 
                    security_context = null, 
                    service_account = '', 
                    service_account_name = '', 
                    set_hostname_as_fqdn = True, 
                    share_process_namespace = True, 
                    subdomain = '', 
                    termination_grace_period_seconds = 56, 
                    tolerations = [
                        null
                        ], 
                    topology_spread_constraints = [
                        null
                        ], 
                    volumes = [
                        null
                        ], )
            )
        else:
            return V1PodTemplateSpec(
        )
        """

    def testV1PodTemplateSpec(self):
        """Test V1PodTemplateSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
