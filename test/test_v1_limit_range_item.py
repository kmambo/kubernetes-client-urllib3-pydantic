# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v1_limit_range_item import V1LimitRangeItem

class TestV1LimitRangeItem(unittest.TestCase):
    """V1LimitRangeItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1LimitRangeItem:
        """Test V1LimitRangeItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1LimitRangeItem`
        """
        model = V1LimitRangeItem()
        if include_optional:
            return V1LimitRangeItem(
                default = {
                    'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                    },
                default_request = {
                    'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                    },
                max = {
                    'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                    },
                max_limit_request_ratio = {
                    'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                    },
                min = {
                    'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                    },
                type = ''
            )
        else:
            return V1LimitRangeItem(
                type = '',
        )
        """

    def testV1LimitRangeItem(self):
        """Test V1LimitRangeItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
