# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v1_persistent_volume_claim_template import V1PersistentVolumeClaimTemplate

class TestV1PersistentVolumeClaimTemplate(unittest.TestCase):
    """V1PersistentVolumeClaimTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1PersistentVolumeClaimTemplate:
        """Test V1PersistentVolumeClaimTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1PersistentVolumeClaimTemplate`
        """
        model = V1PersistentVolumeClaimTemplate()
        if include_optional:
            return V1PersistentVolumeClaimTemplate(
                metadata = kubernetes.models.v1/object_meta.v1.ObjectMeta(
                    annotations = {
                        'key' : ''
                        }, 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        ''
                        ], 
                    generate_name = '', 
                    generation = 56, 
                    labels = {
                        'key' : ''
                        }, 
                    managed_fields = [
                        null
                        ], 
                    name = '', 
                    namespace = '', 
                    owner_references = [
                        null
                        ], 
                    resource_version = '', 
                    self_link = '', 
                    uid = '', ),
                spec = kubernetes.models.v1/persistent_volume_claim_spec.v1.PersistentVolumeClaimSpec(
                    access_modes = [
                        ''
                        ], 
                    data_source = null, 
                    data_source_ref = null, 
                    resources = null, 
                    selector = null, 
                    storage_class_name = '', 
                    volume_attributes_class_name = '', 
                    volume_mode = '', 
                    volume_name = '', )
            )
        else:
            return V1PersistentVolumeClaimTemplate(
                spec = kubernetes.models.v1/persistent_volume_claim_spec.v1.PersistentVolumeClaimSpec(
                    access_modes = [
                        ''
                        ], 
                    data_source = null, 
                    data_source_ref = null, 
                    resources = null, 
                    selector = null, 
                    storage_class_name = '', 
                    volume_attributes_class_name = '', 
                    volume_mode = '', 
                    volume_name = '', ),
        )
        """

    def testV1PersistentVolumeClaimTemplate(self):
        """Test V1PersistentVolumeClaimTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
