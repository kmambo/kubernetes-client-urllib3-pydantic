# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v2_external_metric_status import V2ExternalMetricStatus

class TestV2ExternalMetricStatus(unittest.TestCase):
    """V2ExternalMetricStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2ExternalMetricStatus:
        """Test V2ExternalMetricStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2ExternalMetricStatus`
        """
        model = V2ExternalMetricStatus()
        if include_optional:
            return V2ExternalMetricStatus(
                current = kubernetes.models.v2/metric_value_status.v2.MetricValueStatus(
                    average_utilization = 56, 
                    average_value = null, 
                    value = null, ),
                metric = kubernetes.models.v2/metric_identifier.v2.MetricIdentifier(
                    name = '', 
                    selector = null, )
            )
        else:
            return V2ExternalMetricStatus(
                current = kubernetes.models.v2/metric_value_status.v2.MetricValueStatus(
                    average_utilization = 56, 
                    average_value = null, 
                    value = null, ),
                metric = kubernetes.models.v2/metric_identifier.v2.MetricIdentifier(
                    name = '', 
                    selector = null, ),
        )
        """

    def testV2ExternalMetricStatus(self):
        """Test V2ExternalMetricStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
