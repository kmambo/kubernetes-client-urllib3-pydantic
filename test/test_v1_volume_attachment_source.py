# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubernetes.models.v1_volume_attachment_source import V1VolumeAttachmentSource

class TestV1VolumeAttachmentSource(unittest.TestCase):
    """V1VolumeAttachmentSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1VolumeAttachmentSource:
        """Test V1VolumeAttachmentSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1VolumeAttachmentSource`
        """
        model = V1VolumeAttachmentSource()
        if include_optional:
            return V1VolumeAttachmentSource(
                inline_volume_spec = kubernetes.models.v1/persistent_volume_spec.v1.PersistentVolumeSpec(
                    access_modes = [
                        ''
                        ], 
                    aws_elastic_block_store = null, 
                    azure_disk = null, 
                    azure_file = null, 
                    capacity = {
                        'key' : kubernetes.models.v1_pod_spec_overhead_value.v1_PodSpec_overhead_value()
                        }, 
                    cephfs = null, 
                    cinder = null, 
                    claim_ref = null, 
                    csi = null, 
                    fc = null, 
                    flex_volume = null, 
                    flocker = null, 
                    gce_persistent_disk = null, 
                    glusterfs = null, 
                    host_path = null, 
                    iscsi = null, 
                    local = null, 
                    mount_options = [
                        ''
                        ], 
                    nfs = null, 
                    node_affinity = null, 
                    persistent_volume_reclaim_policy = '', 
                    photon_persistent_disk = null, 
                    portworx_volume = null, 
                    quobyte = null, 
                    rbd = null, 
                    scale_io = null, 
                    storage_class_name = '', 
                    storageos = null, 
                    volume_attributes_class_name = '', 
                    volume_mode = '', 
                    vsphere_volume = null, ),
                persistent_volume_name = ''
            )
        else:
            return V1VolumeAttachmentSource(
        )
        """

    def testV1VolumeAttachmentSource(self):
        """Test V1VolumeAttachmentSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
